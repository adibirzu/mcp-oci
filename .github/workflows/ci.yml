name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    name: Lint (Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools and package
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install ruff black mypy
      - name: Ruff check (core)
        run: |
          ruff check \
            src/mcp_oci_compute \
            src/mcp_oci_objectstorage \
            src/mcp_oci_iam \
            src/mcp_oci_networking \
            src/mcp_oci_limits \
            src/mcp_oci_budgets \
            src/mcp_oci_monitoring \
            src/mcp_oci_osub \
            src/mcp_oci_introspect \
            src/mcp_oci_serve \
            src/mcp_oci_runtime \
            mcp_oci_common
      - name: Black check (core)
        run: |
          black --check \
            src/mcp_oci_compute \
            src/mcp_oci_objectstorage \
            src/mcp_oci_iam \
            src/mcp_oci_networking \
            src/mcp_oci_limits \
            src/mcp_oci_budgets \
            src/mcp_oci_monitoring \
            src/mcp_oci_osub \
            src/mcp_oci_introspect \
            src/mcp_oci_serve \
            src/mcp_oci_runtime \
            mcp_oci_common
      - name: MyPy (best-effort)
        run: |
          mypy src || true

  test:
    name: Tests (Py ${{ matrix.python-version }} / ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov
      - name: Run unit tests with coverage (skip integration)
        env:
          PYTHONWARNINGS: ignore
        run: |
          pytest -q \
            --ignore=tests/integration --ignore=mcp_servers \
            --cov=src --cov-report=xml --cov-report=term-missing \
            --cov-fail-under=80
      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: ${{ matrix.os }},py${{ matrix.python-version }}
          verbose: true

  docs:
    name: Docs Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run docs checks
        run: |
          bash scripts/ci_doc_check.sh
